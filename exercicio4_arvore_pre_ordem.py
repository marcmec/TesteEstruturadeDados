# -*- coding: utf-8 -*-
"""exercicio4_arvore_pre_ordem.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jr1eeK1nMHprQFaF1BOsArSN72ny3BY1
"""

class NoArvore:
  def __init__(self, valor):
    self.valor = valor
    self.esquerda = None
    self.direita = None

class ArvoreBinaria:
  def __init__(self):
    self.raiz = None

  def adicionar(self, valor):
    if self.raiz is None:
       self.raiz = NoArvore(valor)
    else:
      self._adicionar_recursivo(self.raiz, valor)

  def _adicionar_recursivo(self, no_atual, valor):
    if valor < no_atual.valor:
      if no_atual.esquerda is None:
        no_atual.esquerda = NoArvore(valor)
      else:
        self._adicionar_recursivo(no_atual.esquerda, valor)

    elif valor > no_atual.valor:
      if no_atual.direita is None:
        no_atual.direita = NoArvore(valor)
      else:
        self._adicionar_recursivo(no_atual.direita, valor)

  def em_ordem(self):
    return self._em_ordem_recursivo(self.raiz, [])

  def _em_ordem_recursivo(self, no_atual, resultado):
    if no_atual is not None:
      self._em_ordem_recursivo(no_atual.esquerda, resultado)
      resultado.append(no_atual.valor)
      self._em_ordem_recursivo(no_atual.direita, resultado)
    return resultado

arvore = ArvoreBinaria()

arvore.adicionar(5)
arvore.adicionar(7)
arvore.adicionar(1)
arvore.adicionar(3)
arvore.adicionar(6)

print(arvore.em_ordem())